{"version":3,"sources":["components/Form.js","components/Element.js","pages/All.js","pages/Active.js","pages/Completed.js","pages/TodoNew.js","pages/Error404.js","components/Navbar.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["Form","_this","this","react_default","a","createElement","onSubmit","props","className","type","id","aria-describedby","value","inputText","onChange","e","target","placeholder","React","Component","Element","console","log","data-id","item","onHandleChecked","checked","status","htmlFor","All","tasks","map","components_Element","key","Active","arrayFilter","filter","Completed","TodoNew","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onHandleChange","texto","setState","onHandleSubmit","preventDefault","objTask","concat","Date","getTime","state","newArray","toConsumableArray","localStorage","setItem","JSON","stringify","tagName","arrayTask","getItem","parse","Formulario","components_Form","location","pathname","slice","pages_All","pages_Active","pages_Completed","Error","Navbar","react_router_dom","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Layout","children","components_Navbar","App","components_Layout","react_router","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4166929.chunk.js","sourcesContent":["import React from 'react';\n\nclass Form extends React.Component {\n\trender(){\n\t\treturn (\n\t\t\t<form onSubmit={this.props.onSubmit} className=\"container\">\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label>Tareas</label>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tid=\"InputTarea\"\n\t\t\t\t\taria-describedby=\"emailHelp\"\n\t\t\t\t\tvalue={this.props.inputText}\n\t\t\t\t\tonChange={(e) => {this.props.onChange(e.target.value)}}\n\t\t\t\t\tplaceholder=\"Ingrese su texto\" />\n\t\t\t</div>\n\t\t\t<button type=\"submit\" className=\"btn btn-primary\">Agregar</button>\n\t\t</form>\n)};\n}\n\nexport default Form;","import React from 'react';\n\nconst Element = (props) => {\n\tconsole.log(props);\n\t\n\treturn (\n\t<li data-id={props.item.id}>\n\t\t<input className=\"form-check-input\" type=\"checkbox\" value=\"\" onChange={props.onHandleChecked} id={props.item.id} checked={props.item.status==='Completed'}/>\n\t\t<label className=\"form-check-label\" \thtmlFor={props.item.id}>{props.item.value}</label>\n\t</li>\n\t);\n}\n\nexport default Element","import React from 'react';\nimport Element from '../components/Element';\n\nconst All = (props) => {\t\n\tconsole.log(props);\n\t\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h1>All Tasks</h1>\n\t\t\t<ul>\n\t\t\t\t{props.tasks.map((item)=> <Element key={item.id} item={item} onHandleChecked={props.onHandleChecked}/>)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default All;\n","import React from 'react';\nimport Element from '../components/Element';\n\nconst Active = (props) => {\n\t\tconst arrayFilter = props.tasks.filter((item)=>{\n\t\t\treturn item.status === 'Active';\n\t\t})\n\t\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<h1>Active Tasks</h1>\n\t\t\t\t<ul>\n\t\t\t\t\t{arrayFilter.map(item => <Element key={item.id} item={item} onHandleChecked={props.onHandleChecked}/>)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n}\n\nexport default Active;","import React from 'react';\nimport Element from '../components/Element';\n\nconst Completed = (props) => {\n\t\tconst arrayFilter = props.tasks.filter((item)=>{\n\t\t\treturn item.status === 'Completed';\n\t\t})\n\t\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<h1>Completed Tasks</h1>\n\t\t\t\t<ul>\n\t\t\t\t\t{arrayFilter.map(item => <Element key={item.id} item={item} onHandleChecked={props.onHandleChecked}/>)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n}\n\nexport default Completed;","import React from 'react';\n\nimport Form from '../components/Form';\nimport All from '../pages/All';\nimport Active from '../pages/Active';\nimport Completed from '../pages/Completed';\n\nclass TodoNew extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttasks: [],\n\t\t\tinputText:''\n\t\t}\n\t\t// this.onHandleChange = this.onHandleChange.bind(this)\n\t\t// this.onHandleSubmit = this.onHandleSubmit.bind(this)\n\n\t}\n\n\tonHandleChange = (texto) => {\n\t\t\tthis.setState({inputText: texto})\n\t}\n\n\tonHandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst objTask = {\n\t\t\tid: `${new Date().getTime()}`,\n\t\t\tvalue: this.state.inputText,\n\t\t\tstatus: \"Active\"\n\t\t};\n\t\tconst newArray = [...this.state.tasks, objTask];\n\t\tthis.setState({\n\t\t\ttasks: newArray,\n\t\t\tinputText: ''\n\t\t})\n\t\tlocalStorage.setItem('tasks',JSON.stringify(newArray));\t\t\n\t\t\n\t}\n\n\tonHandleChecked = (e) => {\n\t\tconsole.log(e.target.id, e.target.tagName);\n\t  let arrayTask = this.state.tasks;\n\n\t\tif (e.target.tagName === 'INPUT') {\n\t\t\tif (e.target.checked) {\n\t\t\t\tarrayTask = arrayTask.map(item => {\n\t\t\t\t\tif (item.id === e.target.id) {\n\t\t\t\t\t\titem.status = \"Completed\";\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tarrayTask = arrayTask.map(item => {\n\t\t\t\t\tif (item.id === e.target.id) {\n\t\t\t\t\t\titem.status = \"Active\";\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tlocalStorage.setItem(\"tasks\", JSON.stringify(arrayTask))\n\t\tthis.setState({\n\t\t\ttasks: arrayTask\n\t\t})\n\t}\n\tcomponentDidMount(){\n\t\tconsole.log(this.state.tasks);\n\t\t\n\t\tif (localStorage.getItem('tasks')){\n\n\t\t\tthis.setState({\n\t\t\t\ttasks:JSON.parse(localStorage.getItem('tasks')) \n\t\t\t})\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\ttasks:JSON.parse(localStorage.setItem('tasks', '[]'))\n\t\t\t})\n\t\t}\n\t}\n\n\trender () {\n\t\tconsole.log(this.state.tasks);\n\t\t\n\t\tconst Formulario = (<Form onChange={this.onHandleChange} onSubmit={this.onHandleSubmit} inputText={this.state.inputText}/>)\n\t\tif (this.props.location.pathname.slice(1) === \"\") {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t{Formulario}\n\t\t\t\t<All tasks={this.state.tasks} onHandleChecked={this.onHandleChecked}/>\n\t\t\t</div>\n\t\t\t);\n\t\t} else if (this.props.location.pathname.slice(1) === \"active\") {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t{Formulario}\n\t\t\t\t\t<Active tasks={this.state.tasks} onHandleChecked={this.onHandleChecked}/>\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t} else if (this.props.location.pathname.slice(1) === \"completed\") {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t{Formulario}\n\t\t\t\t\t<Completed tasks={this.state.tasks} onHandleChecked={this.onHandleChecked}/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} \n\t}\n}\n\nexport default TodoNew;\n","import React from 'react';\n\nconst Error = () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\tError\n\t\t</div>\n\t)\n}\n\nexport default Error;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n\treturn (\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-primary \">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">Navbar</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\n\t\t\t\t<div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\n\t\t\t\t\t<ul className=\"navbar-nav justify-content-end\" >\n\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/\">All <span className=\"sr-only\">(current)</span></Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/active\">Active</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/completed\">Completed</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t);\n}\n\nexport default Navbar;","import React from 'react';\nimport Navbar from './Navbar';\n\nclass Layout extends React.Component {\n\t\n\t\n\trender () {\n\t\tconsole.log(this.props.children);\n\t\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar/>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Layout;\n\n","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\nimport TodoNew from './pages/TodoNew';\nimport Error from './pages/Error404';\n\nimport Layout from './components/Layout';\n\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n// import TodoNew from './pages/TodoNew';\n\nclass App extends React.Component {\n\trender () {\n\t\t\n\treturn (\n    <Router>\n\t\t\t<Layout>\n\t\t\t\t<Switch className=\"container\">\n\t\t\t\t\t<Route exact path=\"/\" component={TodoNew} />\n\t\t\t\t\t<Route exact path=\"/Active\" component={TodoNew}/>\n\t\t\t\t\t<Route exact path=\"/Completed\" component={TodoNew}/>\n\t\t\t\t\t<Route component={Error}/>\n\t\t\t\t</Switch>\n\t\t\t</Layout>\n\t\t</Router>\n  )};\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}